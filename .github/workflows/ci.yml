# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_ENV: test

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Create .env file
      run: |
        touch .env.local
        echo VITE_POSTGRES_URL=${{ secrets.POSTGRES_URL }} >> .env.local
        cat .env.local

    - name: Build Artifacts
      run: npm run build --if-present
      env:
        VITE_POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

    - name: Run Typecheck
      run: npm run typecheck

    - name: Start PostgreSQL with Docker Compose
      run: docker compose up -d

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U user; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
      env:
        PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Push SQL Schema
      run: npx drizzle-kit push
      env:
        VITE_POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

    - name: Run Tests
      run: npm test
      env:
        VITE_POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

    - name: Stop Docker Compose
      run: docker compose down
